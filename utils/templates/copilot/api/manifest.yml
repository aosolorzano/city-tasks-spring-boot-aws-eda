# The manifest for the "api" service.
# Read the full specification for the "Load Balanced Web Service" type at:
# https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: api
type: Load Balanced Web Service

# Docker Image Arguments.
image:
  build:
    context: .
    dockerfile: src/city-tasks-api/Dockerfile-native
  port: 8080

# ECS Task Definition.
cpu: 512
memory: 1024
platform: linux/arm64

# Enable running commands in your container.
exec: true

# Autoscaling configuration:
count:
  range: 1-3
  cooldown:
    in: 60s
    out: 30s
  cpu_percentage: 80
  memory_percentage: 85

# Application Load Balancer.
http:
  path: '/'
  alias: server_domain_name
  healthcheck:
    path: '/actuator/health'
    success_codes: '200,301'
    healthy_threshold: 3
    unhealthy_threshold: 2
    interval: 10s
    timeout: 5s
    grace_period: 30s
  deregistration_delay: 15s
  stickiness: false
  target_container: envoy
  target_port: 443

# Envoy container's port is 443. Protocol and health check will use "HTTPS".
sidecars:
  envoy:
    port: 443
    image:
      build:
        context: .
        dockerfile: ./src/city-tasks-proxy/Dockerfile
    variables:
      ENVOY_UID: 0

# Limit to read-only access to mounted root filesystems.
storage:
  readonly_fs: true

# Defaults to launching the ECS Tasks in public or private subnets.
network:
  vpc:
    placement: 'private'

# Environment Variables.
variables:
  CITY_TASKS_TIME_ZONE: -05:00
  CITY_IDP_ENDPOINT: https://cognito-idp.idp_aws_region.amazonaws.com/cognito_user_pool_id

# Override any value above based on the deployment environment.
environments:
  dev:
    http:
      alias: server_fqdn
    sidecars:
      envoy:
        image:
          build:
            args:
              envoy_env: dev
        variables:
          ENVOY_LOG_LEVEL: debug
    variables:
      SPRING_PROFILES_ACTIVE: dev
    deployment:
      rolling: 'recreate'
